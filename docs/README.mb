Documentation d’Installation et d’Utilisation
________________________________________
1. Prérequis
Avant de procéder à l’installation, assurez-vous que les conditions suivantes sont remplies :
1.	Système d’exploitation :
	Windows 10/11 (64 bits)
	Linux (testé sur Ubuntu 20.04 ou versions ultérieures)
2.	Python :
	Version 3.9 ou supérieure installée.
	Disponible sur Python.org.
3.	TDM-GCC (pour la compilation C/C++) :
	Disponible sur TDM-GCC.
4.	PyQt6 :
	Installé via pip (à l’aide de la commande ci-dessous).
5.	Autres dépendances Python :
pip install PyQt6
	pip install -r requirements.txt (le fichier sera fourni avec le projet).
6.	Structure des fichiers :
Assurez-vous que les fichiers sont organisés comme suit : 
	SAE302/
	|-- client/
	|   |-- client.py
    |-- Server/
	|   |-- server_maitre.py
	|   |-- server_esclave.py
	|-- temp_codes/
	|-- requirements.txt
________________________________________
2. Installation
2.1 Cloner le projet
	Clonez le répertoire depuis le dépôt GitHub ou transférez les fichiers via un autre moyen.
	git clone https://github.com/Vasla13/SAE302.git
	cd SAE302
	Installez les dépendances Python nécessaires :
	pip install -r requirements.txt
2.2 Configuration du compilateur GCC/G++
	Installez TDM-GCC en suivant les instructions officielles sur leur site.
	Ajoutez le chemin du compilateur à la variable d’environnement PATH pour qu'il soit reconnu par le système.
	Testez la configuration : 
	gcc --version
	g++ --version
2.3 Vérification des permissions
	Assurez-vous que le répertoire temp_codes a des droits en lecture/écriture.
	Sur Windows : clic droit sur le dossier > Propriétés > Sécurité.
	Sur Linux : 
	chmod -R 755 temp_codes
________________________________________
3. Démarrage des Serveurs
3.1 Serveur Maître
	Accédez au dossier Server : 
	cd Server
	Lancez le serveur maître avec Python : 
	python server_maitre.py
	Vous verrez une sortie dans la console confirmant que le serveur est en cours d’exécution sur l’adresse 0.0.0.0 et le port par défaut (5000).
3.2 Serveurs Esclaves
Le serveur maître lance automatiquement les serveurs esclaves en fonction des besoins. Cependant, vous pouvez démarrer manuellement un serveur esclave si besoin :
	Toujours dans le dossier Server, exécutez : 
	python server_esclave.py 6001
Vous pouvez remplacer 6001 par un autre port libre.
________________________________________
4. Démarrage du Client
	Accédez au dossier client : 
	cd client
	Lancez l’interface graphique : 
	python client.py
	Une interface s’ouvre. Remplissez les champs suivants : 
    IP du serveur : 127.0.0.1 (ou l’adresse IP du serveur maître).
	Port : 5000 (par défaut).
	Importez ou écrivez un programme dans l’interface, choisissez le langage et cliquez sur Exécuter le code.
________________________________________
5. Tests de Fonctionnement
5.1 Test de Soumission de Code
	Depuis le client, soumettez un programme Python simple, tel que : 
	print("Bonjour monde")
	Cliquez sur Exécuter le code et vérifiez que le résultat s’affiche dans la console.
5.2 Test de Chargement et Gestion d’Esclaves
	Augmentez la charge en soumettant plusieurs programmes simultanément.
	Vérifiez que le serveur maître lance des esclaves pour répartir la charge.
	Consultez les logs dans la console pour confirmer la bonne répartition.
5.3 Commandes ADMIN
	Utilisez les commandes suivantes dans l’interface client : 
	GET_INFO : Affiche l’état actuel du système (tâches en cours, esclaves actifs).
	SET_MAX_TASKS : Permet de modifier le nombre maximum de tâches locales.
	SET_MAX_SLAVES : Ajuste dynamiquement le nombre maximum d’esclaves autorisés.
________________________________________
Cette documentation couvre les principales étapes pour installer, démarrer et tester le système. 

